#!/bin/sh
# -*- tab-width:4;indent-tabs-mode:nil -*-
# ex: ts=4 sw=4 et

# Pull environment for this install
. "{{runner_base_dir}}/lib/env.sh"

# Make sure the user running this script is the owner and/or su to that user
check_user "$@"
ES=$?
if [ "$ES" -ne 0 ]; then
    exit $ES
fi

# Keep track of where script was invoked
ORIGINAL_DIR=$(pwd)

# Make sure CWD is set to runner run dir
cd $RUNNER_BASE_DIR

# Identify the script name
SCRIPT=`basename $0`

usage() {
    echo "Usage: $SCRIPT { clean-msg-store | clean-registry | reload-config | "
    echo "                      start-app | stop-app | "
    echo "                      cluster-reset | cluster-force-reset | cluster-join | "
    echo "                      cluster-status | cluster-change-node-type | "
    echo "                      cluster-forget-node | cluster-update-discovery-node |"
    echo "                      list-sessions | session-info"
    echo "}"
}

case "$1" in
    clean-msg-store)
        node_up_check
        $NODETOOL rpc vmq_msg_store clean_all
        ;;
    clean-registry)
        node_up_check
        $NODETOOL rpc vmq_reg reset_all_tables
        ;;
    reload-config)
        node_up_check
        $ERTS_PATH/escript $ERTS_PATH/cuttlefish -e $RUNNER_ETC_DIR -s $RUNNER_LIB_DIR -d ./data/generated.configs -c $RUNNER_ETC_DIR/vernemq.conf
        $NODETOOL rpc vmq_config_reloader configure_node
        ;;
    stop-app)
        node_up_check
        $NODETOOL rpc vmq_app_utils stop_all_require_vmq_server
        ;;
    start-app)
        node_up_check
        $NODETOOL rpc vmq_app_utils start_all_require_vmq_server
        ;;
    cluster-reset)
        node_up_check
        $NODETOOL rpc vmq_app_utils mnesia_cluster_reset
        ;;
    cluster-force-reset)
        node_up_check
        $NODETOOL rpc vmq_app_utils mnesia_cluster_reset
        ;;
    cluster-join)
        if [ $# -eq 2 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils mnesia_cluster_join "$2"
        elif [ $# -eq 3 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils mnesia_cluster_join "$2" "$3"
        else
            echo "Usage: $SCRIPT cluster-join <discovery node> [--ram]"
            exit 1
        fi
        ;;
    cluster-status)
        node_up_check
        $NODETOOL rpc vmq_app_utils mnesia_cluster_status
        ;;
    cluster-change-node-type)
        if [ $# -eq 2 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils mnesia_cluster_change_node_type "$2"
        else
            echo "Usage: $SCRIPT cluster-change-node-type disc | ram"
            exit 1
        fi
        ;;
    cluster-forget-node)
        if [ $# -eq 2 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils mnesia_cluster_forget_node "$2"
        elif [ $# -eq 3 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils mnesia_cluster_forget_node "$2" "$3"
        else
            echo "Usage: $SCRIPT cluster-forget-node <node> [--offline]"
            exit 1
        fi
        ;;
    cluster-update-discovery-node)
        if [ $# -eq 2 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils mnesia_cluster_update_node "$2"
        else
            echo "Usage: $SCRIPT cluster-forget-node <node> [--offline]"
            exit 1
        fi
        ;;
    release-upgrade)
        if [ $# -eq 2 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils upgrade "$2"
        else
            node_up_check
            $NODETOOL rpc vmq_app_utils upgrade
        fi
        ;;
    list-sessions)
        node_up_check
        $NODETOOL rpc vmq_app_utils list_sessions "$@"
        ;;
    session-info)
        if [ $# -ge 2 ]; then
            node_up_check
            $NODETOOL rpc vmq_app_utils session_info "$@"
        else
            echo "Usage: $SCRIPT session-info <client-id> [info-items ...]"
            exit 1
        fi
        ;;

    *)
        usage
        ;;
esac
